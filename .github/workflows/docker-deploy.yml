name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - name: List files
        run: ls -l
      - name: Cache pip packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements2.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile', '**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/al3kq/pvidetl:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          password: ${{ secrets.DO_PASSWORD }}
          script: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u al3kq --password-stdin
            docker pull ghcr.io/al3kq/pvidetl:latest
            docker stop pvidetl || true
            docker rm pvidetl || true
            docker run -d -p 8000:8000 --name pvidetl ghcr.io/al3kq/pvidetl:latest
